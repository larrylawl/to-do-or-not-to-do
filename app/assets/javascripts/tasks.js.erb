/*
Resets form by reseting value on TODO box, focuses on it, and
submit upon hitting enter key
Resets tag if there's a value
Abstracted out from 4 javascript files!
*/

var edit_counter = 0;

// String --> Undefined
function reset_form(selector) {
	const attributes = attribute_selectors(selector);
	const title = get_title_selector(selector);
	$(title).focus();
	reset_value(attributes);
}

// String --> Undefined
// Array of strings --> Undefined
function reset_value(selectors) {
	for (let i = 0; i < selectors.length; i++){
		$(selectors[i]).val("");
	}
}

// String --> Undefined
function submit_on_enter(selector) {
	$(selector).keypress(function(event) {
		if(event.which == 13) {
			$(this).trigger('submit.rails');
		}
	});
}

function submit_on_enter_form(selector) {
	const attributes = attribute_selectors(selector);
	for (let i = 0; i < attributes.length; i++){
		submit_on_enter(attributes[i]);
	}
}

// String --> Array
// Returns array of attribute selectors in the order of title, tag, and details
function attribute_selectors(selector) {
	const title = get_title_selector(selector);
	const tag = get_tag_selector(selector);
	const details = get_details_selector(selector);
	return [title, tag, details];
}

function submit_on_click(selector) {
	$(`${selector}`).click(function(){
		$(this).parent().trigger('submit.rails');
	})
}

function element_exist(selector) {
	return $(`${selector}`.length > 0);
}

function get_title_selector(selector) {
	return `${selector} [name*=title]`;
}

function get_tag_selector(selector) {
	return `${selector} [name*=tag_list]`;
}

function get_details_selector(selector) {
	return `${selector} [name*=details]`;
}

$(document).on("turbolinks:load",function () {
	$(`.details`).hide();
	reset_form("#form");
	submit_on_enter_form("#form");
	submit_on_click("input[type=checkbox]");
})





